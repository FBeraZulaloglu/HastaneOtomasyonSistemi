/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hastane_otomasyonu;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.sql.ResultSet;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author faruk
 */
public class Ana_Ekran extends javax.swing.JFrame {

	Hastane hastane = new Hastane();
	mySQL<Object> myDataBase = new mySQL();

	List<Randevu> randevular = hastane.getRandevuList();

	Hasta kullaniciHasta;
	Doktor kullaniciDoktor;

	public Ana_Ekran() {
		initComponents();
		hastaRaporlarıDir();
		//hastalariGoster();
		//doktorlariGoster();
		doktorSifre.setText("");
		AddIstifaDir();
	}

	void hastaRaporlarıDir() {
		try {
			File dir = new File("C:\\Users\\faruk\\Documents\\NetBeansProjects\\Hastane_Otomasyonu_Database\\HastaRaporlari");
			if (!dir.exists()) {
				if (dir.mkdir()) {
					System.out.println("Hastanın Rapor directorysi oluşturuldu");
				}
			}
		} catch (Exception ex) {
			System.out.println("DİR EKLENEMEDİ");
		}
	}

	void hastalariGoster() {
		try {
			ResultSet rs = myDataBase.runQuery("select * from HASTA");
			while (rs.next()) {
				System.out.println("HASTA ADI : " + rs.getString("ad") + " HASTA SOYADI : " + rs.getString("soyad"));
			}
		} catch (Exception ex) {
			System.out.println(ex.toString());
		}
	}

	void doktorlariGoster() {
		try {
			ResultSet rs = myDataBase.runQuery("select * from DOKTOR");
			while (rs.next()) {
				System.out.println("DOKTOR ADI : " + rs.getString("ad") + " DOKTOR SOYADI : " + rs.getString("soyad"));
			}
		} catch (Exception ex) {
			System.out.println(ex.toString());
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kayıtEkranı = new javax.swing.JButton();
        hastaGiris = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        hastaAdSoyad = new javax.swing.JTextField();
        hastaTC = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        doktorAd = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        doktorGiris = new javax.swing.JButton();
        doktorSifre = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        kayıtEkranı.setText("KAYIT");
        kayıtEkranı.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kayıtEkranıActionPerformed(evt);
            }
        });

        hastaGiris.setText("Giris");
        hastaGiris.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hastaGirisActionPerformed(evt);
            }
        });

        jLabel1.setText("TC Numarasi");

        jLabel2.setText("Hasta Adi Soyadi");

        hastaAdSoyad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hastaAdSoyadMouseClicked(evt);
            }
        });
        hastaAdSoyad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hastaAdSoyadActionPerformed(evt);
            }
        });

        hastaTC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hastaTCMouseClicked(evt);
            }
        });
        hastaTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hastaTCActionPerformed(evt);
            }
        });

        jLabel3.setText("Eger kayitli degilseniz kayit butonuna basiniz.");

        jSeparator1.setBackground(new java.awt.Color(255, 102, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 153, 153));

        jLabel4.setText("Doktor Ad Soyad");

        doktorAd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doktorAdMouseClicked(evt);
            }
        });

        jLabel5.setText("Şifre");

        jLabel6.setText("Hasta Giriş Paneli");

        jLabel7.setText("Doktor Giriş Paneli");

        doktorGiris.setText("Giriş");
        doktorGiris.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doktorGirisActionPerformed(evt);
            }
        });

        doktorSifre.setText("jPasswordField1");
        doktorSifre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doktorSifreMouseClicked(evt);
            }
        });

        jButton1.setText("SİFRE DEĞİŞTİR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 0, 0));
        jButton2.setText("Kaydımı Sil");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(204, 0, 51));
        jButton3.setText("İstifa Et");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(hastaAdSoyad, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hastaTC, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(hastaGiris, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(kayıtEkranı, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(doktorAd)
                                .addComponent(doktorSifre, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(doktorGiris, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(140, 140, 140)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton1)))))
                .addGap(107, 107, 107))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel6)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(hastaAdSoyad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hastaTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(hastaGiris, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kayıtEkranı, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(doktorAd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(doktorSifre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(doktorGiris, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 19, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hastaAdSoyadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hastaAdSoyadActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_hastaAdSoyadActionPerformed

    private void hastaTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hastaTCActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_hastaTCActionPerformed

	private boolean hastaVar() {
		try {
			ResultSet rs = myDataBase.runQuery("select * from hasta");
			while (rs.next()) {
				System.out.println("TC :" + rs.getString("TC"));
				System.out.println("HASTA GİRİS :" + hastaAdSoyad.getText().toLowerCase().equals(rs.getString("AD").toLowerCase() + " " + rs.getString("SOYAD").toLowerCase()));
				if (hastaTC.getText().equals(rs.getString("tc"))
						&& hastaAdSoyad.getText().toLowerCase().equals(rs.getString("AD").toLowerCase() + " " + rs.getString("SOYAD").toLowerCase())) {
					return true;
				}
			}
		} catch (Exception ex) {
			System.out.println(ex.toString());
		}
		System.out.println("HASTA BULUNMADI");
		return false;
	}

	private boolean doktorVar() {

		try {
			ResultSet rs = myDataBase.runQuery("select * from Doktor");
			while (rs.next()) {
				if (doktorSifre.getText().equals(rs.getString("sifre"))
						&& doktorAd.getText().toLowerCase().equals(rs.getString("Ad").toLowerCase() + " " + rs.getString("Soyad").toLowerCase())) {
					return true;
				}
			}
		} catch (Exception ex) {
			System.out.println(ex.toString());
		}

		return false;
	}

	void AddIstifaDir() {
		// Bütün hastalar için adları soyadları ve tc leri nin bulunduğu dir ler ekler

		try {
			File raporFile = new File("C:\\Users\\faruk\\Documents\\NetBeansProjects\\Hastane_Otomasyonu_Database\\ISTIFA_BELGELERİ");
			if (!raporFile.exists()) {
				if (raporFile.mkdir()) {
					System.out.println("ISTIFA DİR OLUŞTU");
				}
			}
		} catch (Exception ex) {
			System.out.println("RAPOR DİR EKLENEMEDİ");
		}

	}

	private Doktor isSifreExist(String sifre) {
		try {
			List<Doktor> doktorlar = hastane.getDoktorList();
			for (Doktor doktor : doktorlar) {
				if (doktor.getSifre().equals(sifre)) {
					return doktor;
				}
			}
		} catch (Exception ex) {
			System.out.println(ex.toString());
		}
		return null;
	}

	private String doktorİstifaKabul(Doktor d) {
		try {
			myDataBase.remove(d);
		} catch (Exception ex) {
			System.out.println(ex.toString());
		}
		return null;
	}

	//istifa eden doktorun randevularını silmek için
	private void doktorRandevuSil(Doktor doktor) {
		for (Randevu randevu : randevular) {
			if (randevu.getDoktorSiFre().equals(doktor.getSifre())) {
				System.out.println("REMOVED");
				myDataBase.remove(randevu);
				System.out.println(doktor.getAd() + " ın randevusu silinmiştir.");
			}
		}
	}

	//İstifa eden doktoru dosyay yazan metod
	private void DoktorYaz(Doktor doktor) {
		String path = "C:\\Users\\faruk\\Documents\\NetBeansProjects\\Hastane_Otomasyonu_Database\\ISTIFA_BELGELERİ\\"
				+ doktor.getAd() + "_" + doktor.getSifre() + ".dat";
		File istifaFile = new File(path);
		if (!istifaFile.exists()) {
			try {
				istifaFile.createNewFile();
			} catch (IOException ex) {
				Logger.getLogger(Ana_Ekran.class.getName()).log(Level.SEVERE, null, ex);
			}
		}

		try {
			ObjectOutputStream oos = null;
			try {
				oos = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(new File(path))));
			} catch (FileNotFoundException ex) {
				Logger.getLogger(Ana_Ekran.class.getName()).log(Level.SEVERE, null, ex);
			} catch (IOException ex) {
				Logger.getLogger(Ana_Ekran.class.getName()).log(Level.SEVERE, null, ex);
			}
			if (oos != null) {
				oos.writeObject(doktor);
				oos.close();
			}
		} catch (IOException ex) {
			Logger.getLogger(Ana_Ekran.class.getName()).log(Level.SEVERE, null, ex);
		}

	}

	private void istifaEdenDoktorlarOku() {
		String dir = "C:\\Users\\faruk\\Documents\\NetBeansProjects\\Hastane_Otomasyonu_Database\\ISTIFA_BELGELERİ\\";
		File istifalar = new File(dir);
		File[] istifaList = istifalar.listFiles();
		System.out.println("------------İSTİFA EDEN DOKTOR BİLGİLERİ------------------");
		for (File istifa : istifaList) {
			try {
				ObjectInputStream ois = null;
				try {
					ois = new ObjectInputStream(new BufferedInputStream(new FileInputStream(new File(istifa.getAbsolutePath()))));
				} catch (FileNotFoundException ex) {
					System.out.println(ex.toString());
				}
				if (ois != null) {
					Doktor d = (Doktor) ois.readObject();
					System.out.println(d.getAd() + " " + d.getSoyad() + " " + d.getBolum() + " " + d.getUnvan());
					ois.close();
				}
			} catch (ClassNotFoundException | IOException ex) {
				Logger.getLogger(Ana_Ekran.class.getName()).log(Level.SEVERE, null, ex);
			}
		}

	}

	private Hasta isTcExist(String tc) {
		try {
			List<Hasta> hastalar = hastane.getHastaList();
			for (Hasta hasta : hastalar) {
				if (hasta.getTc().equals(Integer.parseInt(tc))) {
					return hasta;
				}
			}
		} catch (Exception ex) {
			System.out.println(ex.toString());
		}
		return null;
	}

	private String hastaSilindi(Hasta h) {
		try {
			myDataBase.remove(h);
		} catch (Exception ex) {
			System.out.println(ex.toString());
		}
		return null;
	}

	private void hastaRandevuSil(Hasta hasta) {
		for (Randevu randevu : randevular) {
			if (randevu.getHastaTc().equals(hasta.getTc())) {
				System.out.println("REMOVED");
				myDataBase.remove(randevu);
				System.out.println(hasta.getAd() + "ın randevusu silinmiştir.");
			}
		}
	}

    private void hastaGirisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hastaGirisActionPerformed

		if (hastaTC.getText() != null && hastaAdSoyad.getText() != null) {
			if (hastaVar() == true) {
				// hasta bulunmuşsa kullanıcı set edilir
				kullaniciHasta = new Hasta(Integer.parseInt(hastaTC.getText()));
				HastaIslemEkranı hastaIslem = new HastaIslemEkranı(kullaniciHasta);
				this.setVisible(false);
				hastaIslem.setVisible(true);
				//System.out.println("Hasta Islem Ekranı : hasta :" + kullaniciHasta.getAd() + " " + kullaniciHasta.getSoyad());
			} else {
				JOptionPane.showMessageDialog(rootPane, "Girdiginiz bilgilerde bir hasta bulunmamaktadir.");
			}
		} else {
			JOptionPane.showMessageDialog(rootPane, "Lutfen bos alan bırakmayınız.");
		}
    }//GEN-LAST:event_hastaGirisActionPerformed

    private void kayıtEkranıActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kayıtEkranıActionPerformed
		// TODO add your handling code here:
		Kayit_Ekrani kayitEkrani = new Kayit_Ekrani();
		this.setVisible(false);
		kayitEkrani.setVisible(true);
    }//GEN-LAST:event_kayıtEkranıActionPerformed

    private void doktorGirisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doktorGirisActionPerformed
		// Her doktora özel randevularını gösteren bir ekran acılacaktır.
		if (doktorAd.getText() != null && doktorSifre.getText() != null) {
			if (doktorVar() == true) {
				//eger doktor varsa doktor kullanıcı set edilir.
				kullaniciDoktor = new Doktor(doktorSifre.getText());
				DoktorRandevuDefteri ekran2 = new DoktorRandevuDefteri(kullaniciDoktor);
				this.setVisible(false);
				ekran2.setVisible(true);
			} else {
				JOptionPane.showMessageDialog(rootPane, "Girdiginiz bilgilerde bir doktor bulunmamaktadir.");
			}
		} else {
			JOptionPane.showMessageDialog(rootPane, "Lutfen bos alan bırakmayınız.");
		}
    }//GEN-LAST:event_doktorGirisActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		// TODO add your handling code here:
		DoktorSifreDegistir ds = new DoktorSifreDegistir();
		ds.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		// Hastanın kaydını databaseden sil
		int istifa = JOptionPane.showConfirmDialog(rootPane, "Kaydınızı silmek istedğinize eminmisiniz ?", "Hasta Çıkış", JOptionPane.YES_NO_OPTION);
		if (istifa == 0) {
			String tc = JOptionPane.showInputDialog(rootPane, "TC nizi giriniz");
			System.out.println("ÇIK TC :" + tc);

			if (isTcExist(tc) != null) {
				Hasta hastaSil = isTcExist(tc);
				hastaRandevuSil(hastaSil);
				hastaSilindi(hastaSil);
				//çıkan hastayı bir dosyaya yazdır
			} else {
				JOptionPane.showMessageDialog(rootPane, "Şifrenizi yanlış girdiniz lütfen tekrar deneyiniz.");
			}

		}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
		// Doktorun kaydını database den sil ve istifa eden doktorları bir file a yazdır.
		int istifa = JOptionPane.showConfirmDialog(rootPane, "İstifa Etmek istedğinize eminmisiniz ?", "Doktor İstifa", JOptionPane.YES_NO_OPTION);
		if (istifa == 0) {
			String sifre = JOptionPane.showInputDialog(rootPane, "Sifrenizi giriniz");
			//System.out.println("İSTİFA SİFRE :" + sifre);
			if (isSifreExist(sifre) != null) {
				Doktor doktor_istifa = isSifreExist(sifre);
				doktorRandevuSil(doktor_istifa);//doktorun sahip olduğu randevuları siler
				doktorİstifaKabul(doktor_istifa);//databaseden doktoru siler
				DoktorYaz(doktor_istifa);//istifa eden doktoru dosyaya yazdıran metod
				istifaEdenDoktorlarOku();//bütün istifa enden doktorları yazdırır.
			} else {
				JOptionPane.showMessageDialog(rootPane, "Şifrenizi yanlış girdiniz lütfen tekrar deneyiniz.");
			}

		}
    }//GEN-LAST:event_jButton3ActionPerformed

    private void hastaAdSoyadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hastaAdSoyadMouseClicked
		// TODO add your handling code here:
		doktorAd.setText("");
		doktorSifre.setText("");
    }//GEN-LAST:event_hastaAdSoyadMouseClicked

    private void hastaTCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hastaTCMouseClicked
		// TODO add your handling code here:
		doktorAd.setText("");
		doktorSifre.setText("");
    }//GEN-LAST:event_hastaTCMouseClicked

    private void doktorAdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doktorAdMouseClicked
		// TODO add your handling code here:
		hastaAdSoyad.setText("");
		hastaTC.setText("");
    }//GEN-LAST:event_doktorAdMouseClicked

    private void doktorSifreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doktorSifreMouseClicked
		// TODO add your handling code here:
		hastaAdSoyad.setText("");
		hastaTC.setText("");
    }//GEN-LAST:event_doktorSifreMouseClicked

	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Ana_Ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Ana_Ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Ana_Ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Ana_Ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Ana_Ekran().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField doktorAd;
    private javax.swing.JButton doktorGiris;
    private javax.swing.JPasswordField doktorSifre;
    private javax.swing.JTextField hastaAdSoyad;
    private javax.swing.JButton hastaGiris;
    private javax.swing.JTextField hastaTC;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton kayıtEkranı;
    // End of variables declaration//GEN-END:variables
}
